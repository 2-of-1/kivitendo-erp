[paths]
# path to temporary files (must be writeable by the web server)
userspath = users
# spool directory for batch printing
spool = spool
# templates base directory
templates = templates
# Path to the old memberfile (ignored on new installations)
memberfile = users/members

[task_server]
# User name to use for database access
login = mb
# Set to 1 for debug messages in /tmp/lx-office-debug.log
debug = 1
# Chose a system user the daemon should run under when started as root.
run_as =

[periodic_invoices]
# The user name a report about the posted and printed invoices is sent
# to.
send_email_to  = mb
# The "From:" header for said email.
email_from     = Lx-Office Daemon <root@localhost>
# The subject for said email.
email_subject  = Benachrichtigung: automatisch erstellte Rechnungen
# The template file used for the email's body.
email_template = templates/webpages/oe/periodic_invoices_email.txt

[Console]
# autologin to use if none is given
login = mb

# autorun lines will be executed after autologin.
# be warned that loading huge libraries will noticably lengthen startup time.
autorun = require "bin/mozilla/common.pl";
        = use English qw(-no_match_vars);
        = use List::Util qw(min max);
        = use Sort::Naturally;
        = my ($a, $b, $e, $f, @a1, @a2, %h);
        = sub take { my $max = shift; my $r = ref($_[0]) eq 'ARRAY' ? $_[0] : \@_; return @{$r}[0..List::Util::min($max, scalar(@{$r})) - 1]; }

# location of history file for permanent history
history_file = users/console_history

[debug]
# Use DBIx::Log4perl for logging DBI calls. The string LXDEBUGFILE
# will be replaced by the file name configured for $::lxdebug.
dbix_log4perl = 0
dbix_log4perl_config = log4perl.logger = FATAL, LOGFILE
                     = log4perl.appender.LOGFILE=Log::Log4perl::Appender::File
                     = log4perl.appender.LOGFILE.filename=LXDEBUGFILE
                     = log4perl.appender.LOGFILE.mode=append
                     = log4perl.appender.LOGFILE.Threshold = ERROR
                     = log4perl.appender.LOGFILE.layout=PatternLayout
                     = log4perl.appender.LOGFILE.layout.ConversionPattern=[%r] %F %L %c - %m%n
                     = log4perl.logger.DBIx.Log4perl=DEBUG, A1
                     = log4perl.appender.A1=Log::Log4perl::Appender::File
                     = log4perl.appender.A1.filename=LXDEBUGFILE
                     = log4perl.appender.A1.mode=append
                     = log4perl.appender.A1.layout=Log::Log4perl::Layout::PatternLayout
                     = log4perl.appender.A1.layout.ConversionPattern=%d %p> %F{1}:%L %M - %m%n

# Activate certain global debug messages. If you want to combine
# several options then list them seperated by spaces.
#
# Possible values include:
#   NONE   - no debug output (default)
#   INFO
#   DEBUG1
#   DEBUG2
#   QUERY              - Dump SQL queries (only in legacy code; see also "dbix_log4perl" above)
#   TRACE              - Track function calls and returns
#   BACKTRACE_ON_ERROR - Print a function call backtrace when $form->error() is called
#   REQUEST_TIMER      - Log timing of HTTP requests
#   WARN               - warnings
#   ALL                - all possible debug messages
#
#   DEVEL              - sames as "INFO QUERY TRACE BACKTRACE_ON_ERROR REQUEST_TIMER"
#
# Example:
#   global_level = TRACE QUERY
global_level = NONE

# Activate monitoring of the content of $form. If it is active then
# monitoring can be turned on for certain variables with the
# following:
#   $form->{"Watchdog::<variable>"} = 1;
# Monitoring has a performance cost and is therefore deactivated by
# default.
watch_form = 0

# If you want to debug the creation of LaTeX files then set this to 1.
# That way the temporary LaTeX files created during PDF creation are
# not removed and remain in the "users" directory.
keep_temp_files = 0

# The file name where the debug messages are written to.
file_name = /tmp/lx-office-debug.log
