use Cwd;
use vars qw($userspath $spool $memberfile $templates $sendmail $language $sid $latex $eur $webdav $lizenzen $jscalendar $watch_form_variables);

# path to user configuration files
$userspath = "users";

# spool directory for batch printing
$spool = "spool";

# templates base directory
$templates = "templates";

# member file
$memberfile = "users/members";

# Wenn nicht Bilanzierung dann auf 1 setzen
$eur= 1;

# location of sendmail
$sendmail = "| /usr/sbin/sendmail -t";

# set language for login and admin
$language = "de";

# Oracle
$sid = "T80509";
$ENV{"ORACLE_HOME"} = "/usr/local/oracle";

# if you have latex installed set to 1
$latex_templates = 1;

# if the server can't find gzip, latex, dvips or pdflatex, add the path
$ENV{PATH} .= ":/usr/local/bin";

# on mac os X using Fink's Perl libs, add the path
$ENV{PERL5LIB} .= ":/sw/lib/perl5";

# Aktivierung der verschiedenen Spezialmodule
$webdav = 0;
$lizenzen = 1;

# Jscalendar an/aus
$jscalendar = 1;

## Support fuer OpenDocument-Vorlagen
# Diese Option legt fest, ob OpenDocument-Vorlagen generell verfuegbar sind.
$opendocument_templates = 1;

# Die folgenden zwei Variablen legen Pfade zu Programmen fest, die benoetigt
# werden, um OpenDocument-Vorlagen in PDFs umzuwandeln.

# Pfad zu OpenOffice.org writer
$openofficeorg_writer_bin = "/usr/bin/oowriter";

# Soll OpenOffice dauerhaft gestartet bleiben? Die Konvertierung nachfolgender
# Dokumente geht dann schneller. Allerdings wird auf dem System ein
# installiertes Python mit den Python-UNO-Bindings benoetigt, die Bestandteil
# von OpenOffice sind.
$openofficeorg_daemon = 1;
$openofficeorg_daemon_port = 2002;

# Pfad zum "X virtual frame buffer", unter dem OpenOffice gestartet wird.
# Zusaetzlich muessen die Programme "xauth" und "mcookie" gefunden werden
# koennen, was eine Aenderung an PATH bedeuten kann.
$ENV{"PATH"} = $ENV{"PATH"} . ":/usr/X11R6/bin:/usr/X11/bin";
$xvfb_bin = "/usr/bin/Xvfb";

# Das charset, in dem die Daten in der Datenbank abgelegt sind.
# $dbcharset = 'UTF-8'; # Für UNICODE UTF-8 
$dbcharset = "ISO-8859-15";


# Globale Debug-Ausgaben (de-)aktivieren? Moegliche Werte sind
# LXDebug::NONE   - keine Debugausgaben
# LXDebug::INFO
# LXDebug::DEBUG1 
# LXDebug::DEBUG2 
# LXDebug::QUERY  - SQL Queries 
# LXDebug::TRACE  - Tracing von Funktionsaufrufen
# LXDebug::BACKTRACE_ON_ERROR - Vollständiger Aufrufpfad, wenn $form->error() aufgerufen wird
# LXDebug::ALL    - alle Debugausgaben
#
# Beipiel: 
#   $LXDebug::global_level = LXDebug::TRACE | LXDebug::QUERY;
$LXDebug::global_level = LXDebug::NONE;

# Überwachung der Inhalte von $form aktiviert oder nicht? Wenn ja,
# dann können einzelne Variablen mit
#   $form->{"Watchdog::<variablenname>"} = 1;
# überwacht werden. Bedeutet aber auch einen Geschwindigkeitsverlust,
# weshalb sie normalerweise deaktiviert ist.
$LXDebug::watch_form = 0;

1;

